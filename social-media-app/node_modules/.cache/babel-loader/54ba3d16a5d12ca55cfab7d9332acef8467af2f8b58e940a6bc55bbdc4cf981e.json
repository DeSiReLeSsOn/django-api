{"ast":null,"code":"import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getAccessToken, getRefreshToken, getUser } from \"../hooks/user.actions\";\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosService.interceptors.request.use(async config => {\n  /**\r\n   * Retrieving the access and refresh tokens from the local storage\r\n   */\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\nconst refreshAuthLogic = async failedRequest => {\n  return axios.post(\"/auth/refresh/\", {\n    refresh: getRefreshToken()\n  }, {\n    baseURL: \"http://localhost:8000/api\"\n  }).then(resp => {\n    const {\n      access\n    } = resp.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh: getRefreshToken(),\n      user: getUser()\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","getAccessToken","getRefreshToken","getUser","axiosService","create","baseURL","headers","interceptors","request","use","config","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","post","refresh","then","resp","access","data","localStorage","setItem","JSON","stringify","user","catch","removeItem","fetcher","url","get"],"sources":["C:/Users/Admin/Desktop/django-api/social-media-app/src/helpers/axios.js"],"sourcesContent":["import axios from \"axios\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\nimport {\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getUser,\r\n} from \"../hooks/user.actions\";\r\n\r\nconst axiosService = axios.create({\r\n  baseURL: \"http://localhost:8000/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\naxiosService.interceptors.request.use(async (config) => {\r\n  /**\r\n   * Retrieving the access and refresh tokens from the local storage\r\n   */\r\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\r\n  return config;\r\n});\r\n\r\naxiosService.interceptors.response.use(\r\n  (res) => Promise.resolve(res),\r\n  (err) => Promise.reject(err)\r\n);\r\n\r\nconst refreshAuthLogic = async (failedRequest) => {\r\n  return axios\r\n    .post(\r\n      \"/auth/refresh/\",\r\n      {\r\n        refresh: getRefreshToken(),\r\n      },\r\n      {\r\n        baseURL: \"http://localhost:8000/api\",\r\n      }\r\n    )\r\n    .then((resp) => {\r\n      const { access } = resp.data;\r\n      failedRequest.response.config.headers[\"Authorization\"] =\r\n        \"Bearer \" + access;\r\n      localStorage.setItem(\r\n        \"auth\",\r\n        JSON.stringify({ access, refresh: getRefreshToken(), user: getUser() })\r\n      );\r\n    })\r\n    .catch(() => {\r\n      localStorage.removeItem(\"auth\");\r\n    });\r\n};\r\n\r\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\r\n\r\nexport function fetcher(url) {\r\n  return axiosService.get(url).then((res) => res.data);\r\n}\r\n\r\nexport default axiosService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,4BAA4B,MAAM,oBAAoB;AAC7D,SACEC,cAAc,EACdC,eAAe,EACfC,OAAO,QACF,uBAAuB;AAE9B,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAC;EAChCC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,YAAY,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACtD;AACF;AACA;EACEA,MAAM,CAACJ,OAAO,CAACK,aAAa,GAAI,UAASX,cAAc,CAAC,CAAE,EAAC;EAC3D,OAAOU,MAAM;AACf,CAAC,CAAC;AAEFP,YAAY,CAACI,YAAY,CAACK,QAAQ,CAACH,GAAG,CACnCI,GAAG,IAAKC,OAAO,CAACC,OAAO,CAACF,GAAG,CAAC,EAC5BG,GAAG,IAAKF,OAAO,CAACG,MAAM,CAACD,GAAG,CAC7B,CAAC;AAED,MAAME,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EAChD,OAAOrB,KAAK,CACTsB,IAAI,CACH,gBAAgB,EAChB;IACEC,OAAO,EAAEpB,eAAe,CAAC;EAC3B,CAAC,EACD;IACEI,OAAO,EAAE;EACX,CACF,CAAC,CACAiB,IAAI,CAAEC,IAAI,IAAK;IACd,MAAM;MAAEC;IAAO,CAAC,GAAGD,IAAI,CAACE,IAAI;IAC5BN,aAAa,CAACP,QAAQ,CAACF,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GACpD,SAAS,GAAGkB,MAAM;IACpBE,YAAY,CAACC,OAAO,CAClB,MAAM,EACNC,IAAI,CAACC,SAAS,CAAC;MAAEL,MAAM;MAAEH,OAAO,EAAEpB,eAAe,CAAC,CAAC;MAAE6B,IAAI,EAAE5B,OAAO,CAAC;IAAE,CAAC,CACxE,CAAC;EACH,CAAC,CAAC,CACD6B,KAAK,CAAC,MAAM;IACXL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC,CAAC;AACN,CAAC;AAEDjC,4BAA4B,CAACI,YAAY,EAAEe,gBAAgB,CAAC;AAE5D,OAAO,SAASe,OAAOA,CAACC,GAAG,EAAE;EAC3B,OAAO/B,YAAY,CAACgC,GAAG,CAACD,GAAG,CAAC,CAACZ,IAAI,CAAET,GAAG,IAAKA,GAAG,CAACY,IAAI,CAAC;AACtD;AAEA,eAAetB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}